{
  "swagger": "2.0",
  "info": {
    "description": "API documentation for your Flask App",
    "version": "1.0.0",
    "title": "Segwise Game Analytics"
  },
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate using username and password.",
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "username"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "JWT access token"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - incorrect username or password"
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/upload-csv": {
      "post": {
        "summary": "Upload CSV file link",
        "description": "Uploads a CSV file from a given link and stores/updates data.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authorization (format: 'Bearer <token>')",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "Request payload containing CSV link",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "csv_link": {
                  "type": "string",
                  "example": "https://docs.google.com/spreadsheets/d/e/2PACX-1vSCtraqtnsdYd4FgEfqKsHMR2kiwqX1H9uewvAbuqBmOMSZqTAkSEXwPxWK_8uYQap5omtMrUF1UJAY/pub?gid=1439814054&single=true&output=csv"
                }
              },
              "required": [
                "csv_link"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CSV data successfully uploaded."
          },
          "400": {
            "description": "Invalid input or failed to download CSV."
          },
          "500": {
            "description": "Server error."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/data": {
      "post": {
        "summary": "Fetch game data with filtering, sorting, and pagination",
        "description": "Returns filtered and paginated game data based on given parameters.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "Bearer token for authorization",
            "required": true
          },
          {
            "in": "body",
            "name": "request",
            "description": "Request payload for fetching data with filters, sorting, and paging",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "startRow": {
                  "type": "integer",
                  "example": 0,
                  "description": "Starting row index for pagination"
                },
                "endRow": {
                  "type": "integer",
                  "example": 100,
                  "description": "Ending row index for pagination"
                },
                "rowGroupCols": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "example": "price",
                        "description": "Column field to group rows by"
                      }
                    }
                  },
                  "example": [
                    {
                      "field": "price"
                    }
                  ],
                  "description": "Columns to group rows by (if any)"
                },
                "groupKeys": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["0.99"],
                  "description": "Keys for groups if hierarchical grouping is used"
                },
                "filterModel": {
                  "type": "object",
                  "description": "Filters applied to columns. Each key represents a column.",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "filterType": {
                        "type": "string",
                        "enum": [
                          "number",
                          "text",
                          "date",
                          "array"
                        ],
                        "description": "Type of filter"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "equals",
                          "notEqual",
                          "greaterThan",
                          "greaterThanOrEqual",
                          "lessThan",
                          "lessThanOrEqual",
                          "inRange",
                          "contains",
                          "notContains",
                          "startsWith",
                          "endsWith"
                        ],
                        "description": "Filter condition"
                      },
                      "filter": {
                        "type": "string",
                        "description": "Filter value"
                      },
                      "filterTo": {
                        "type": "string",
                        "description": "Additional filter value for range filters"
                      }
                    },
                    "required": [
                      "filterType",
                      "type",
                      "filter"
                    ]
                  },
                  "example": {
                    "price": {
                      "filterType": "number",
                      "type": "greaterThan",
                      "filter": "0",
                      "filterTo": ""
                    }
                  }
                },
                "sortModel": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "colId": {
                        "type": "string",
                        "description": "Column ID to sort on"
                      },
                      "sort": {
                        "type": "string",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "description": "Sort direction"
                      }
                    }
                  },
                  "example": [
                    {
                      "sort": "asc",
                      "colId": "price"
                    }
                  ]
                }
              },
              "required": [
                "startRow",
                "endRow"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "rowCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error occurred."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {},
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your Bearer token in the format **Bearer <token>**"
    }
  }
}